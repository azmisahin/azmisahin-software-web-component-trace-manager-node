trigger:
- master

jobs:
- job: Build
  displayName: project [ install ] [ test ] [ publish ] on agent

  pool:
    vmImage: ubuntu-latest

  steps:
  - checkout: self
    clean: true
  - task: NodeTool@0
    displayName: Use Node 16.x
    inputs:
      versionSpec: 16.x
  - task: CmdLine@2
    displayName: '[installs] a package and any packages that it depends on'
    inputs:
      script: npm install
  - task: CmdLine@2
    displayName: '[prettier] An opinionated code formatter'
    inputs:
      script: npm run prettier
  - task: CmdLine@2
    displayName: '[linting] it will analyze for possible errors.'
    inputs:
      script: npm run lint
  - task: CmdLine@2
    displayName: '[testing] [unit] smaller units of your application, such as classes and methods'
    inputs:
      script: npm run test:unit
  - task: CmdLine@2
    displayName: testing [ producion] to verify the functionality of the software application.
    inputs:
      script: npm run test:features
  - task: CmdLine@2
    displayName: '[testing] [ automation ] script testing of the working interface of the project interface.'
    enabled: False
    inputs:
      script: npm run test:automation
  - task: CmdLine@2
    displayName: '[coverage] measures how well the source code has been tested.'
    inputs:
      script: npm run coverage
  - task: CmdLine@2
    displayName: '[documentation] soure code documentation generator'
    inputs:
      script: npm run document
  - task: CmdLine@2
    displayName: '[build] [production] project compile'
    enabled: False
    inputs:
      script: npm run build
  - task: CmdLine@2
    displayName: '[export ] extraction of project executable files.'
    enabled: False
    inputs:
      script: npm run export
  - task: ArchiveFiles@2
    displayName: '[archiving] executable files.'
    inputs:
      rootFolderOrFile: $(System.DefaultWorkingDirectory)
      includeRootFolder: false
  - task: CopyFiles@2
    displayName: '[preparation] of archived files for publication.'
    inputs:
      SourceFolder: $(Build.ArtifactStagingDirectory)
      Contents: $(Build.BuildId).zip
      TargetFolder: $(Build.ArtifactStagingDirectory)\ArtifactsToBePublished
  - task: PublishBuildArtifacts@1
    displayName: '[publish] [project ]artifact: drop'
    inputs:
      PathtoPublish: $(Build.ArtifactStagingDirectory)\ArtifactsToBePublished
  - task: PublishTestResults@2
    displayName: '[public] [test] [ENV:production] [ junit ]'
    inputs:
      testResultsFiles: $(System.DefaultWorkingDirectory)/reports/test/junit.xml
  - task: PublishCodeCoverageResults@1
    displayName: '[publish] [coverage] [cobertura]'
    inputs:
      codeCoverageTool: Cobertura
      summaryFileLocation: $(System.DefaultWorkingDirectory)/reports/coverage/cobertura-coverage.xml

- job: SendPackage
  displayName: pack and ship the project on agent
  dependsOn: Build

  pool:
    vmImage: ubuntu-latest
  
  steps:
  - checkout: self
    clean: true
  - task: Npm@1
    enabled: False
    displayName: npm install
    inputs:
      verbose: false
  - task: Npm@1
    displayName: npm publish
    enabled: False
    inputs:
      command: publish
      verbose: true
      publishEndpoint: 949b604a-6e88-4b18-8c6a-49135f0a310d
...